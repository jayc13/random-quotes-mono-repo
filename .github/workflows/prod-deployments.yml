name: Production Deployment

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy-server:
    name: "Deploy - Server"
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 23
          cache: 'npm'
          cache-dependency-path: ./server/package-lock.json
      - name: Deploy Server to Cloudflare
        id: deploy
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          wranglerVersion: "4.12.0"
          workingDirectory: "./server"
          command: deploy
  deploy-client-admin:
    name: "Deploy - Client Admin"
    runs-on: ubuntu-latest
    environment: production
    defaults:
      run:
        working-directory: ./client/admin
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 23
          cache: 'npm'
          cache-dependency-path: ./client/admin/package-lock.json
      - name: Install dependencies
        run: npm ci
      - name: Build
        env:
          VITE_API_URL: ${{ secrets.API_URL }}
          VITE_AUTH0_DOMAIN: ${{ secrets.AUTH0_DOMAIN }}
          VITE_AUTH0_CLIENT_ID: ${{ secrets.AUTH0_CLIENT_ID }}
        run: npm run build
      - name: Deploy Client to Cloudflare
        id: deploy
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          wranglerVersion: "4.12.0"
          workingDirectory: "./client/admin"
          command: pages deploy
  deploy-client-consumer:
    name: "Deploy - Client Consumer"
    runs-on: ubuntu-latest
    environment: production
    outputs:
      client-consumer-production-url: ${{ steps.deploy.outputs.deployment-url  }}
    defaults:
      run:
        working-directory: ./client/consumer
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 23
          cache: 'npm'
          cache-dependency-path: ./client/consumer/package-lock.json
      - name: Install dependencies
        run: npm ci
      - name: Build
        env:
          VITE_DATA_API: ${{ secrets.API_URL }}
          VITE_DATA_API_KEY: ${{ secrets.DATA_API_KEY }}
        run: npm run build
      - name: Deploy Client to Cloudflare
        id: deploy
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          wranglerVersion: "4.12.0"
          workingDirectory: "./client/consumer"
          command: pages deploy
  e2e-tests-consumer:
    name: "E2E Tests - Consumer App"
    needs:
      - deploy-server
      - deploy-client-consumer
      - deploy-client-admin
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 23
          cache: 'npm'
          cache-dependency-path: ./test/e2e-tests/package-lock.json
      - name: Install dependencies (E2E tests)
        run: |
          cd test/e2e-tests
          npm install
      - name: Setup Playwright
        run: |
          cd test/e2e-tests
          npx playwright install chromium
      - name: Run E2E tests
        env:
          CONSUMER_BASE_URL: 'https://random-quotes.javiercaballero.info'
        run: |
          cd test/e2e-tests
          npm run test-consumer
      - name: Upload results
        uses: actions/upload-artifact@v4
        if: ${{ failure() || cancelled() }}
        with:
          name: playwright-report-consumer
          path: test/e2e-tests/playwright-report/
          retention-days: 30
